"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.downloadFile = void 0;
const fs_1 = require("fs");
const read_file_1 = require("./read-file");
const downloadFile = (url, to, onProgress) => {
    return new Promise((resolve, reject) => {
        (0, read_file_1.readFile)(url)
            .then((res) => {
            const totalSize = Number(res.headers['content-length']);
            const writeStream = (0, fs_1.createWriteStream)(to);
            // Listen to 'close' event instead of more
            // concise method to avoid this problem
            // https://github.com/remotion-dev/remotion/issues/384#issuecomment-844398183
            writeStream.on('close', () => resolve({ sizeInBytes: totalSize }));
            writeStream.on('error', (err) => reject(err));
            let downloaded = 0;
            res.pipe(writeStream).on('error', (err) => reject(err));
            res.on('data', (d) => {
                downloaded += d.length;
                onProgress === null || onProgress === void 0 ? void 0 : onProgress({
                    downloaded,
                    progress: downloaded / totalSize,
                    totalSize,
                });
            });
        })
            .catch((err) => {
            reject(err);
        });
    });
};
exports.downloadFile = downloadFile;
