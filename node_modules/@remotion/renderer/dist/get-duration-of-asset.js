"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDurationOfAsset = void 0;
const execa_1 = __importDefault(require("execa"));
const p_limit_1 = require("./p-limit");
const durationOfAssetCache = {};
const limit = (0, p_limit_1.pLimit)(1);
const getDurationOfAssetUnlimited = async ({ ffprobeExecutable, src, }) => {
    if (durationOfAssetCache[src]) {
        return durationOfAssetCache[src];
    }
    const durationCmd = await (0, execa_1.default)(ffprobeExecutable !== null && ffprobeExecutable !== void 0 ? ffprobeExecutable : 'ffprobe', [
        '-v',
        'error',
        '-select_streams',
        'v:0',
        '-show_entries',
        'stream=duration',
        '-of',
        'default=noprint_wrappers=1:nokey=1',
        src,
    ]);
    const duration = parseFloat(durationCmd.stdout);
    if (Number.isNaN(duration)) {
        throw new TypeError(`Could not get duration of ${src}: ${durationCmd.stdout}`);
    }
    durationOfAssetCache[src] = duration;
    return duration;
};
const getDurationOfAsset = (options) => {
    return limit(getDurationOfAssetUnlimited, options);
};
exports.getDurationOfAsset = getDurationOfAsset;
