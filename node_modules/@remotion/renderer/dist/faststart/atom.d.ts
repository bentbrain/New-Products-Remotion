/// <reference types="node" />
export declare const FREE_ATOM: number;
export declare const JUNK_ATOM: number;
export declare const MDAT_ATOM: number;
export declare const MOOV_ATOM: number;
export declare const PNOT_ATOM: number;
export declare const SKIP_ATOM: number;
export declare const WIDE_ATOM: number;
export declare const PICT_ATOM: number;
export declare const FTYP_ATOM: number;
export declare const UUID_ATOM: number;
export declare const CMOV_ATOM: number;
export declare const TRAK_ATOM: number;
export declare const MDIA_ATOM: number;
export declare const MINF_ATOM: number;
export declare const STBL_ATOM: number;
export declare const STCO_ATOM: number;
export declare const CO64_ATOM: number;
export declare const ATOM_PREAMBLE_SIZE: bigint;
export declare const MAX_FTYP_ATOM_SIZE: bigint;
export declare enum SizeKind {
    U32 = 0,
    U64 = 1
}
export interface QtAtom {
    kind: string;
    size: BigInt;
    sizeKind: SizeKind;
    data: QtAtom[] | Buffer;
}
export declare function parseAtoms(infile: Buffer, depth?: number, shallow?: boolean): QtAtom[];
export declare function recurseFlattenAtoms(atoms: QtAtom[], depth?: number): Buffer;
export declare function traverseAtoms(atoms: QtAtom[], callback: (atom: QtAtom) => void): void;
export declare function isQtAtom(atomType: number): boolean;
export declare function hasSubatoms(atomType: number): boolean;
