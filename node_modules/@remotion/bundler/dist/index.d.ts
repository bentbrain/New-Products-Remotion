import esbuild = require('esbuild');
export declare const BundlerInternals: {
    startServer: (entry: string, userDefinedComponent: string, options?: {
        webpackOverride?: import("remotion").WebpackOverrideFn | undefined;
        inputProps?: object | undefined;
        envVariables?: Record<string, string> | undefined;
        port: number | null;
        maxTimelineTracks?: number | undefined;
    } | undefined) => Promise<number>;
    cacheExists: (environment: "development" | "production", inputProps: object | null) => boolean;
    clearCache: (environment: "development" | "production", inputProps: object | null) => Promise<void>;
    getLatestRemotionVersion: () => Promise<any>;
    getPackageManager: () => import("./get-package-manager").PackageManager | "unknown";
    lockFilePaths: {
        manager: import("./get-package-manager").PackageManager;
        path: string;
    }[];
    esbuild: typeof esbuild;
};
export { bundle } from './bundle';
export { PackageManager } from './get-package-manager';
export type { ProjectInfo } from './project-info';
